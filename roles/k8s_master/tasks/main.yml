---
# tasks file for k8s_master
- name: Add kubeadm repositories on Master Node
  yum_repository:
    name: kube
    description: Kubernetes repo
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
    enabled: 1
    gpgcheck: 1
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: Installing Docker & kubeadm on Master Node
  package:
    name:
      - docker
      - kubeadm
      - kubectl
      - kubelet 
      - iproute-tc
      - git
      - httpd-tools     
    state: present

- name: Staring & enabling Docker & kubelet on Master Node
  #command: systemctl start docker
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop: "{{ service_names }}"

- name: Pulling the images of k8s master
  command: kubeadm config images pull

- name: Updating Docker cgroup on Master Node
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
      "exec-opts": ["native.cgroupdriver=systemd"]
      }
- name: Restart docker on Master Node
  service:
    name: docker
    state: restarted

- name: Initializing k8s cluster
  command: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem

- name: Setting up kubectl on Master Node
  shell:
    cmd: |
      mkdir -p $HOME/.kube
      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      sudo chown $(id -u):$(id -g) $HOME/.kube/config
     
- name: Deploying Flannel on Master Node
  command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

- name: Creating token for Slave
  command: kubeadm token create  --print-join-command
  register: token

- name: Cleaning Caches on RAM
  shell: echo 3 > /proc/sys/vm/drop_caches


# this will configure RBAC for a new user with permissions to create, list, get, update, and delete pods
- name: Configuring RBAC (role based access control) on Master Node
  shell:
    cmd: |
      openssl genrsa -out simplilearn.key 2048
      openssl req -new -key simplilearn.key -out simplilearn.csr -subj "/CN=simplilearn/O=Capstone"
      openssl x509 -req -in simplilearn.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out simplilearn.crt -days 500
      kubectl config set-credentials simplilearn  --client-certificate=simplilearn.crt --client-key=simplilearn.key

# Installing ETCD in Master node
- name: Installing ETCD in Master Node
  shell:
    cmd: |
      sudo yum install -y golang git
      sudo git clone -b v3.4.16 https://github.com/etcd-io/etcd.git
      cd etcd
      sudo ./build
      sudo export PATH="$PATH:`pwd`/bin"

# Running  RBAC for a new user with permissions to create, list, get, update, and delete pods
- name: Applying RBAC roles in Master Node
  command: kubectl apply -f https://raw.githubusercontent.com/0ktay3min/kubernetes-cluster/master/role-binging.yml

# this will setup ingress controller in master node.
- name: Deploying Ingress on Master Node
  command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/aws/deploy.yaml

# this will setup Metrics-Server in master node.
- name: Deploying Metrics-Server Master Node
  command: kubectl apply -f https://raw.githubusercontent.com/0ktay3min/kubernetes-cluster/master/metrics-server.yml

# this will deploy a deployment and server called SimplilearnProject
- name: Deploying Deployment and Service called SimplilearnProject
  command: kubectl apply -f https://raw.githubusercontent.com/0ktay3min/kubernetes-cluster/master/dep-svc.yml

# this will deploy Horizontal Pod Autoscaler called SimplilearnProjec-hpa
- name: Deploying Horizontal Pod Autoscaler called SimplilearnProject-hpa
  command: kubectl apply -f https://raw.githubusercontent.com/0ktay3min/kubernetes-cluster/master/hpa.yml

